name: test-actions
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      NO_COVERAGE_BADGE_UPDATE: 1
      PROMPT_NAME: test name
      PROMPT_EMAIL: test+email@example.com
      REDIS_URL: redis://default@localhost:6379
      REDIS_HOST: localhost
      REDIS_PORT: 6379
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379
    steps:
      - run: uname -a
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org"
      - run: |
          yarn install
      - run: yarn build
      # yarn coverage === c8 + yarn test:node
      - run: yarn coverage
      - name: test:node with PORT
        run: yarn test:node
        env:
          PORT: 3400

      # Takes 13256 ms first time ran
      - name: test:node with TEST_PRODUCT_COUNT 25 products, 5000 reports
        run: yarn test:node
        env:
          TEST_PRODUCT_COUNT: 25
          TEST_REPORT_PER_PRODUCT_COUNT: 200
          TEST_REPORT_PROCESSING_TIMEOUT_MS: 60000
      # Remember this is ADDING each time to the same database
      # When we run the background task in here, it will be running the same reports
      # Expected time
      # (13256 / 5000 * 25000) / 1000 = 67 seconds
      # (13256 ms / 5000 reports * 25000 reports) / 1000 ms = 67 seconds
      - name: test:node with TEST_PRODUCT_COUNT 50 products, 25000 reports
        run: yarn test:node
        env:
          TEST_PRODUCT_COUNT: 50
          TEST_REPORT_PER_PRODUCT_COUNT: 500
          # Should be over expected 67 seconds + 13 seconds from previous reports
          TEST_REPORT_PROCESSING_TIMEOUT_MS: 120000

#      - name: test:node with TEST_PRODUCT_COUNT 250 products, 6250000 reports
#        run: yarn test:node
#        env:
#          TEST_PRODUCT_COUNT: 250
#          TEST_REPORT_PER_PRODUCT_COUNT: 25000
#          # (13256 / 5000 * 6250000) / 1000 / 60 = 276 minutes
#          # (13256 ms / 5000 reports * 6250000 reports) / 1000 ms / 60 seconds = 276 minutes
#          #
#          # Requires enterprise processing time if we don't take into account workers
#          TEST_REPORT_PROCESSING_TIMEOUT_MS: 60000